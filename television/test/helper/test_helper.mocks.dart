// Mocks generated by Mockito 5.3.2 from annotations
// in television/test/helper/test_helper.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;
import 'dart:convert' as _i10;
import 'dart:typed_data' as _i11;

import 'package:core/core.dart' as _i7;
import 'package:dartz/dartz.dart' as _i2;
import 'package:http/http.dart' as _i4;
import 'package:http/io_client.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;
import 'package:movies/movies.dart' as _i9;
import 'package:sqflite/sqflite.dart' as _i8;
import 'package:television/television.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTvDetailResponse_1 extends _i1.SmartFake
    implements _i3.TvDetailResponse {
  _FakeTvDetailResponse_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTVRepository_2 extends _i1.SmartFake implements _i3.TVRepository {
  _FakeTVRepository_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponse_3 extends _i1.SmartFake implements _i4.Response {
  _FakeResponse_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStreamedResponse_4 extends _i1.SmartFake
    implements _i4.StreamedResponse {
  _FakeStreamedResponse_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeIOStreamedResponse_5 extends _i1.SmartFake
    implements _i5.IOStreamedResponse {
  _FakeIOStreamedResponse_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [TVRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockTVRepository extends _i1.Mock implements _i3.TVRepository {
  MockTVRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i2.Either<_i7.Failure, List<_i3.TV>>> getTVOnTheAir() =>
      (super.noSuchMethod(
        Invocation.method(
          #getTVOnTheAir,
          [],
        ),
        returnValue: _i6.Future<_i2.Either<_i7.Failure, List<_i3.TV>>>.value(
            _FakeEither_0<_i7.Failure, List<_i3.TV>>(
          this,
          Invocation.method(
            #getTVOnTheAir,
            [],
          ),
        )),
      ) as _i6.Future<_i2.Either<_i7.Failure, List<_i3.TV>>>);
  @override
  _i6.Future<_i2.Either<_i7.Failure, _i3.TVDetail>> getTVShowDetail(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTVShowDetail,
          [id],
        ),
        returnValue: _i6.Future<_i2.Either<_i7.Failure, _i3.TVDetail>>.value(
            _FakeEither_0<_i7.Failure, _i3.TVDetail>(
          this,
          Invocation.method(
            #getTVShowDetail,
            [id],
          ),
        )),
      ) as _i6.Future<_i2.Either<_i7.Failure, _i3.TVDetail>>);
  @override
  _i6.Future<_i2.Either<_i7.Failure, List<_i3.TV>>> getPopularTVShows() =>
      (super.noSuchMethod(
        Invocation.method(
          #getPopularTVShows,
          [],
        ),
        returnValue: _i6.Future<_i2.Either<_i7.Failure, List<_i3.TV>>>.value(
            _FakeEither_0<_i7.Failure, List<_i3.TV>>(
          this,
          Invocation.method(
            #getPopularTVShows,
            [],
          ),
        )),
      ) as _i6.Future<_i2.Either<_i7.Failure, List<_i3.TV>>>);
  @override
  _i6.Future<_i2.Either<_i7.Failure, List<_i3.TV>>> getTopRatedTVShows() =>
      (super.noSuchMethod(
        Invocation.method(
          #getTopRatedTVShows,
          [],
        ),
        returnValue: _i6.Future<_i2.Either<_i7.Failure, List<_i3.TV>>>.value(
            _FakeEither_0<_i7.Failure, List<_i3.TV>>(
          this,
          Invocation.method(
            #getTopRatedTVShows,
            [],
          ),
        )),
      ) as _i6.Future<_i2.Either<_i7.Failure, List<_i3.TV>>>);
  @override
  _i6.Future<_i2.Either<_i7.Failure, List<_i3.TV>>> getTvRecommendations(
          int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTvRecommendations,
          [id],
        ),
        returnValue: _i6.Future<_i2.Either<_i7.Failure, List<_i3.TV>>>.value(
            _FakeEither_0<_i7.Failure, List<_i3.TV>>(
          this,
          Invocation.method(
            #getTvRecommendations,
            [id],
          ),
        )),
      ) as _i6.Future<_i2.Either<_i7.Failure, List<_i3.TV>>>);
  @override
  _i6.Future<_i2.Either<_i7.Failure, List<_i3.TV>>> searchTVShows(
          String? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchTVShows,
          [query],
        ),
        returnValue: _i6.Future<_i2.Either<_i7.Failure, List<_i3.TV>>>.value(
            _FakeEither_0<_i7.Failure, List<_i3.TV>>(
          this,
          Invocation.method(
            #searchTVShows,
            [query],
          ),
        )),
      ) as _i6.Future<_i2.Either<_i7.Failure, List<_i3.TV>>>);
  @override
  _i6.Future<_i2.Either<_i7.Failure, String>> saveWatchlist(_i3.TVDetail? tv) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveWatchlist,
          [tv],
        ),
        returnValue: _i6.Future<_i2.Either<_i7.Failure, String>>.value(
            _FakeEither_0<_i7.Failure, String>(
          this,
          Invocation.method(
            #saveWatchlist,
            [tv],
          ),
        )),
      ) as _i6.Future<_i2.Either<_i7.Failure, String>>);
  @override
  _i6.Future<_i2.Either<_i7.Failure, String>> removeWatchlist(
          _i3.TVDetail? tv) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeWatchlist,
          [tv],
        ),
        returnValue: _i6.Future<_i2.Either<_i7.Failure, String>>.value(
            _FakeEither_0<_i7.Failure, String>(
          this,
          Invocation.method(
            #removeWatchlist,
            [tv],
          ),
        )),
      ) as _i6.Future<_i2.Either<_i7.Failure, String>>);
  @override
  _i6.Future<bool> isAddedToWatchlist(int? id) => (super.noSuchMethod(
        Invocation.method(
          #isAddedToWatchlist,
          [id],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);
  @override
  _i6.Future<_i2.Either<_i7.Failure, List<_i3.TV>>> getWatchListTVShow() =>
      (super.noSuchMethod(
        Invocation.method(
          #getWatchListTVShow,
          [],
        ),
        returnValue: _i6.Future<_i2.Either<_i7.Failure, List<_i3.TV>>>.value(
            _FakeEither_0<_i7.Failure, List<_i3.TV>>(
          this,
          Invocation.method(
            #getWatchListTVShow,
            [],
          ),
        )),
      ) as _i6.Future<_i2.Either<_i7.Failure, List<_i3.TV>>>);
}

/// A class which mocks [TVRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTVRemoteDataSource extends _i1.Mock
    implements _i3.TVRemoteDataSource {
  MockTVRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<List<_i3.TVModel>> getTVOnTheAir() => (super.noSuchMethod(
        Invocation.method(
          #getTVOnTheAir,
          [],
        ),
        returnValue: _i6.Future<List<_i3.TVModel>>.value(<_i3.TVModel>[]),
      ) as _i6.Future<List<_i3.TVModel>>);
  @override
  _i6.Future<_i3.TvDetailResponse> getTVDetail(int? id) => (super.noSuchMethod(
        Invocation.method(
          #getTVDetail,
          [id],
        ),
        returnValue:
            _i6.Future<_i3.TvDetailResponse>.value(_FakeTvDetailResponse_1(
          this,
          Invocation.method(
            #getTVDetail,
            [id],
          ),
        )),
      ) as _i6.Future<_i3.TvDetailResponse>);
  @override
  _i6.Future<List<_i3.TVModel>> getPopularTVShows() => (super.noSuchMethod(
        Invocation.method(
          #getPopularTVShows,
          [],
        ),
        returnValue: _i6.Future<List<_i3.TVModel>>.value(<_i3.TVModel>[]),
      ) as _i6.Future<List<_i3.TVModel>>);
  @override
  _i6.Future<List<_i3.TVModel>> getTopRatedTVShows() => (super.noSuchMethod(
        Invocation.method(
          #getTopRatedTVShows,
          [],
        ),
        returnValue: _i6.Future<List<_i3.TVModel>>.value(<_i3.TVModel>[]),
      ) as _i6.Future<List<_i3.TVModel>>);
  @override
  _i6.Future<List<_i3.TVModel>> getTvRecommendations(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTvRecommendations,
          [id],
        ),
        returnValue: _i6.Future<List<_i3.TVModel>>.value(<_i3.TVModel>[]),
      ) as _i6.Future<List<_i3.TVModel>>);
  @override
  _i6.Future<List<_i3.TVModel>> searchTVShows(String? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchTVShows,
          [query],
        ),
        returnValue: _i6.Future<List<_i3.TVModel>>.value(<_i3.TVModel>[]),
      ) as _i6.Future<List<_i3.TVModel>>);
}

/// A class which mocks [TVLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTVLocalDataSource extends _i1.Mock implements _i3.TVLocalDataSource {
  MockTVLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<String> insertTVWatchlist(_i3.TVTable? tv) => (super.noSuchMethod(
        Invocation.method(
          #insertTVWatchlist,
          [tv],
        ),
        returnValue: _i6.Future<String>.value(''),
      ) as _i6.Future<String>);
  @override
  _i6.Future<String> removeTVWatchlist(_i3.TVTable? tv) => (super.noSuchMethod(
        Invocation.method(
          #removeTVWatchlist,
          [tv],
        ),
        returnValue: _i6.Future<String>.value(''),
      ) as _i6.Future<String>);
  @override
  _i6.Future<_i3.TVTable?> getTVShowById(int? id) => (super.noSuchMethod(
        Invocation.method(
          #getTVShowById,
          [id],
        ),
        returnValue: _i6.Future<_i3.TVTable?>.value(),
      ) as _i6.Future<_i3.TVTable?>);
  @override
  _i6.Future<List<_i3.TVTable>> getWatchlistTVShow() => (super.noSuchMethod(
        Invocation.method(
          #getWatchlistTVShow,
          [],
        ),
        returnValue: _i6.Future<List<_i3.TVTable>>.value(<_i3.TVTable>[]),
      ) as _i6.Future<List<_i3.TVTable>>);
  @override
  _i6.Future<void> cacheTVOnTheAir(List<_i3.TVTable>? tv) =>
      (super.noSuchMethod(
        Invocation.method(
          #cacheTVOnTheAir,
          [tv],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
  @override
  _i6.Future<List<_i3.TVTable>> getCachedTVOnTheAir() => (super.noSuchMethod(
        Invocation.method(
          #getCachedTVOnTheAir,
          [],
        ),
        returnValue: _i6.Future<List<_i3.TVTable>>.value(<_i3.TVTable>[]),
      ) as _i6.Future<List<_i3.TVTable>>);
}

/// A class which mocks [DatabaseHelper].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseHelper extends _i1.Mock implements _i7.DatabaseHelper {
  MockDatabaseHelper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i8.Database?> get database => (super.noSuchMethod(
        Invocation.getter(#database),
        returnValue: _i6.Future<_i8.Database?>.value(),
      ) as _i6.Future<_i8.Database?>);
  @override
  dynamic setDatabase(_i8.Database? database) =>
      super.noSuchMethod(Invocation.method(
        #setDatabase,
        [database],
      ));
  @override
  _i6.Future<void> insertMoviesCacheTransaction(
    List<_i9.MovieTable>? movies,
    String? category,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertMoviesCacheTransaction,
          [
            movies,
            category,
          ],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
  @override
  _i6.Future<List<Map<String, dynamic>>> getMoviesCache(String? category) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMoviesCache,
          [category],
        ),
        returnValue: _i6.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i6.Future<List<Map<String, dynamic>>>);
  @override
  _i6.Future<int> clearMoviesCache(String? category) => (super.noSuchMethod(
        Invocation.method(
          #clearMoviesCache,
          [category],
        ),
        returnValue: _i6.Future<int>.value(0),
      ) as _i6.Future<int>);
  @override
  _i6.Future<int> insertMovieWatchlist(_i9.MovieTable? movie) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertMovieWatchlist,
          [movie],
        ),
        returnValue: _i6.Future<int>.value(0),
      ) as _i6.Future<int>);
  @override
  _i6.Future<int> removeMovieWatchlist(_i9.MovieTable? movie) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeMovieWatchlist,
          [movie],
        ),
        returnValue: _i6.Future<int>.value(0),
      ) as _i6.Future<int>);
  @override
  _i6.Future<Map<String, dynamic>?> getMovieById(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMovieById,
          [id],
        ),
        returnValue: _i6.Future<Map<String, dynamic>?>.value(),
      ) as _i6.Future<Map<String, dynamic>?>);
  @override
  _i6.Future<List<Map<String, dynamic>>> getWatchlistMovies() =>
      (super.noSuchMethod(
        Invocation.method(
          #getWatchlistMovies,
          [],
        ),
        returnValue: _i6.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i6.Future<List<Map<String, dynamic>>>);
  @override
  _i6.Future<int> insertTVWatchlist(_i3.TVTable? tv) => (super.noSuchMethod(
        Invocation.method(
          #insertTVWatchlist,
          [tv],
        ),
        returnValue: _i6.Future<int>.value(0),
      ) as _i6.Future<int>);
  @override
  _i6.Future<int> removeTVWatchlist(_i3.TVTable? tv) => (super.noSuchMethod(
        Invocation.method(
          #removeTVWatchlist,
          [tv],
        ),
        returnValue: _i6.Future<int>.value(0),
      ) as _i6.Future<int>);
  @override
  _i6.Future<Map<String, dynamic>?> getTVShowById(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTVShowById,
          [id],
        ),
        returnValue: _i6.Future<Map<String, dynamic>?>.value(),
      ) as _i6.Future<Map<String, dynamic>?>);
  @override
  _i6.Future<List<Map<String, dynamic>>> getWatchlistTVShow() =>
      (super.noSuchMethod(
        Invocation.method(
          #getWatchlistTVShow,
          [],
        ),
        returnValue: _i6.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i6.Future<List<Map<String, dynamic>>>);
  @override
  _i6.Future<void> insertTVCacheTransaction(
    List<_i3.TVTable>? movies,
    String? category,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertTVCacheTransaction,
          [
            movies,
            category,
          ],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
  @override
  _i6.Future<List<Map<String, dynamic>>> getTVCache(String? category) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTVCache,
          [category],
        ),
        returnValue: _i6.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i6.Future<List<Map<String, dynamic>>>);
  @override
  _i6.Future<int> clearTVCache(String? category) => (super.noSuchMethod(
        Invocation.method(
          #clearTVCache,
          [category],
        ),
        returnValue: _i6.Future<int>.value(0),
      ) as _i6.Future<int>);
}

/// A class which mocks [GetWatchlistTVShows].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetWatchlistTVShows extends _i1.Mock
    implements _i3.GetWatchlistTVShows {
  MockGetWatchlistTVShows() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i2.Either<_i7.Failure, List<_i3.TV>>> execute() =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [],
        ),
        returnValue: _i6.Future<_i2.Either<_i7.Failure, List<_i3.TV>>>.value(
            _FakeEither_0<_i7.Failure, List<_i3.TV>>(
          this,
          Invocation.method(
            #execute,
            [],
          ),
        )),
      ) as _i6.Future<_i2.Either<_i7.Failure, List<_i3.TV>>>);
}

/// A class which mocks [GetWatchlistTVStatus].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetWatchlistTVStatus extends _i1.Mock
    implements _i3.GetWatchlistTVStatus {
  MockGetWatchlistTVStatus() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.TVRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeTVRepository_2(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i3.TVRepository);
  @override
  _i6.Future<bool> execute(int? id) => (super.noSuchMethod(
        Invocation.method(
          #execute,
          [id],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);
}

/// A class which mocks [RemoveTVWatchlist].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoveTVWatchlist extends _i1.Mock implements _i3.RemoveTVWatchlist {
  MockRemoveTVWatchlist() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.TVRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeTVRepository_2(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i3.TVRepository);
  @override
  _i6.Future<_i2.Either<_i7.Failure, String>> execute(_i3.TVDetail? tv) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [tv],
        ),
        returnValue: _i6.Future<_i2.Either<_i7.Failure, String>>.value(
            _FakeEither_0<_i7.Failure, String>(
          this,
          Invocation.method(
            #execute,
            [tv],
          ),
        )),
      ) as _i6.Future<_i2.Either<_i7.Failure, String>>);
}

/// A class which mocks [SaveTVWatchList].
///
/// See the documentation for Mockito's code generation for more information.
class MockSaveTVWatchList extends _i1.Mock implements _i3.SaveTVWatchList {
  MockSaveTVWatchList() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.TVRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeTVRepository_2(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i3.TVRepository);
  @override
  _i6.Future<_i2.Either<_i7.Failure, String>> execute(_i3.TVDetail? tv) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [tv],
        ),
        returnValue: _i6.Future<_i2.Either<_i7.Failure, String>>.value(
            _FakeEither_0<_i7.Failure, String>(
          this,
          Invocation.method(
            #execute,
            [tv],
          ),
        )),
      ) as _i6.Future<_i2.Either<_i7.Failure, String>>);
}

/// A class which mocks [Client].
///
/// See the documentation for Mockito's code generation for more information.
class MockHttpClient extends _i1.Mock implements _i4.Client {
  MockHttpClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i4.Response> head(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #head,
          [url],
          {#headers: headers},
        ),
        returnValue: _i6.Future<_i4.Response>.value(_FakeResponse_3(
          this,
          Invocation.method(
            #head,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i6.Future<_i4.Response>);
  @override
  _i6.Future<_i4.Response> get(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [url],
          {#headers: headers},
        ),
        returnValue: _i6.Future<_i4.Response>.value(_FakeResponse_3(
          this,
          Invocation.method(
            #get,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i6.Future<_i4.Response>);
  @override
  _i6.Future<_i4.Response> post(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i10.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i6.Future<_i4.Response>.value(_FakeResponse_3(
          this,
          Invocation.method(
            #post,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i6.Future<_i4.Response>);
  @override
  _i6.Future<_i4.Response> put(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i10.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i6.Future<_i4.Response>.value(_FakeResponse_3(
          this,
          Invocation.method(
            #put,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i6.Future<_i4.Response>);
  @override
  _i6.Future<_i4.Response> patch(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i10.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patch,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i6.Future<_i4.Response>.value(_FakeResponse_3(
          this,
          Invocation.method(
            #patch,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i6.Future<_i4.Response>);
  @override
  _i6.Future<_i4.Response> delete(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i10.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i6.Future<_i4.Response>.value(_FakeResponse_3(
          this,
          Invocation.method(
            #delete,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i6.Future<_i4.Response>);
  @override
  _i6.Future<String> read(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #read,
          [url],
          {#headers: headers},
        ),
        returnValue: _i6.Future<String>.value(''),
      ) as _i6.Future<String>);
  @override
  _i6.Future<_i11.Uint8List> readBytes(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #readBytes,
          [url],
          {#headers: headers},
        ),
        returnValue: _i6.Future<_i11.Uint8List>.value(_i11.Uint8List(0)),
      ) as _i6.Future<_i11.Uint8List>);
  @override
  _i6.Future<_i4.StreamedResponse> send(_i4.BaseRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #send,
          [request],
        ),
        returnValue:
            _i6.Future<_i4.StreamedResponse>.value(_FakeStreamedResponse_4(
          this,
          Invocation.method(
            #send,
            [request],
          ),
        )),
      ) as _i6.Future<_i4.StreamedResponse>);
  @override
  void close() => super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [IOClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockIOClient extends _i1.Mock implements _i5.IOClient {
  MockIOClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i5.IOStreamedResponse> send(_i4.BaseRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #send,
          [request],
        ),
        returnValue:
            _i6.Future<_i5.IOStreamedResponse>.value(_FakeIOStreamedResponse_5(
          this,
          Invocation.method(
            #send,
            [request],
          ),
        )),
      ) as _i6.Future<_i5.IOStreamedResponse>);
  @override
  void close() => super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i6.Future<_i4.Response> head(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #head,
          [url],
          {#headers: headers},
        ),
        returnValue: _i6.Future<_i4.Response>.value(_FakeResponse_3(
          this,
          Invocation.method(
            #head,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i6.Future<_i4.Response>);
  @override
  _i6.Future<_i4.Response> get(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [url],
          {#headers: headers},
        ),
        returnValue: _i6.Future<_i4.Response>.value(_FakeResponse_3(
          this,
          Invocation.method(
            #get,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i6.Future<_i4.Response>);
  @override
  _i6.Future<_i4.Response> post(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i10.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i6.Future<_i4.Response>.value(_FakeResponse_3(
          this,
          Invocation.method(
            #post,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i6.Future<_i4.Response>);
  @override
  _i6.Future<_i4.Response> put(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i10.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i6.Future<_i4.Response>.value(_FakeResponse_3(
          this,
          Invocation.method(
            #put,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i6.Future<_i4.Response>);
  @override
  _i6.Future<_i4.Response> patch(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i10.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patch,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i6.Future<_i4.Response>.value(_FakeResponse_3(
          this,
          Invocation.method(
            #patch,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i6.Future<_i4.Response>);
  @override
  _i6.Future<_i4.Response> delete(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i10.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i6.Future<_i4.Response>.value(_FakeResponse_3(
          this,
          Invocation.method(
            #delete,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i6.Future<_i4.Response>);
  @override
  _i6.Future<String> read(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #read,
          [url],
          {#headers: headers},
        ),
        returnValue: _i6.Future<String>.value(''),
      ) as _i6.Future<String>);
  @override
  _i6.Future<_i11.Uint8List> readBytes(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #readBytes,
          [url],
          {#headers: headers},
        ),
        returnValue: _i6.Future<_i11.Uint8List>.value(_i11.Uint8List(0)),
      ) as _i6.Future<_i11.Uint8List>);
}
